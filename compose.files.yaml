name: files

include:
  - path: common/compose.postgres.yaml
  - path: common/compose.mariadb.yaml

services:
  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.14@sha256:71e443d2b26ff26056efe22651f25187add3776755e58933cd519327d71273a0
    container_name: paperless
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/paperless:/config
      - nfs-documents:/documents
    secrets:
      - paperless-dbpass
    environment:
      PAPERLESS_CONSUMER_POLLING: "30"
      PAPERLESS_PORT: "8000"
      PAPERLESS_URL: https://paperless.${DOMAIN:?}
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_DBHOST: postgres
      PAPERLESS_DBPASS_FILE: /run/secrets/paperless-dbpass
      PAPERLESS_DATA_DIR: /config/data
      PAPERLESS_MEDIA_ROOT: /documents
      PAPERLESS_CONSUMPTION_DIR: /documents/_processed
      PAPERLESS_CONSUMER_DELETE_DUPLICATES: "true"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_DATE_ORDER: MDY
      PAPERLESS_TASK_WORKERS: "2"
      PAPERLESS_THREADS_PER_WORKER: "2"
      PAPERLESS_EMAIL_TASK_CRON: "disable"
      PAPERLESS_ENABLE_COMPRESSION: "0"
      PAPERLESS_WEBSERVER_WORKERS: "2"
      USERMAP_UID: "3005"
      USERMAP_GID: "100"
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 24M
        limits:
          memory: 1G
    expose:
      - "8000"
    init: true

  pdf-web-edit:
    image: ghcr.io/danielhabenicht/danielhabenicht/fork.pdf-web-edit:v0.9.6@sha256:e851892cc1dc9d8d62c941d37a47057063d9d51d80ad9e95d07ce711259984be
    container_name: pdf-web-edit
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/pdf-web-edit:/config
      - source: nfs-documents
        target: /inbox
        type: volume
        volume:
          subpath: _inbox
      - source: nfs-documents
        target: /outbox
        type: volume
        volume:
          subpath: _processed
      - source: nfs-documents
        target: /archive
        type: volume
        volume:
          subpath: _rejected
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 24M
        limits:
          memory: 96M
    expose:
      - "8080"
    init: false

  photoprism:
    image: registry-1.docker.io/photoprism/photoprism:latest@sha256:1f14335e2cd9dfaadc555ac8d40aa8a3966a5b5e5ef88fa78973ef7e8673fa2b
    container_name: photoprism
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/photoprism:/assets
      - nfs-photos:/photos
    configs:
      - source: photoprism-maintenance
        target: /app/scripts/maintain
    env_file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/photoprism/env
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
      - chadburn.enabled=true
      - chadburn.job-exec.photoprism-backup.schedule=@every 12h
      - chadburn.job-exec.photoprism-backup.command=photoprism backup -a -i -f
      - chadburn.job-exec.photoprism-import.schedule=@every 1h
      - chadburn.job-exec.photoprism-import.command=photoprism import
      - chadburn.job-exec.photoprism-maintain.schedule=@every 24h
      - chadburn.job-exec.photoprism-maintain.command=/app/scripts/maintain
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 128M
        limits:
          memory: 2G
    expose:
      - "2342"
    init: false

  redis:
    image: redis:alpine@sha256:1bf97f21f01b0e7bd4b7b34a26d3b9d8086e41e70c10f262e8a9e0b49b5116a0
    container_name: redis
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/redis:/data
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 20s
      timeout: 3s
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - "6379"
    init: true

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:?}
  proxy-files:
    name: proxy-files

volumes:
  nfs-photos:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/photos"
  nfs-documents:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/documents"

secrets:
  paperless-dbpass:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/paperless/dbpass

configs:
  photoprism-maintenance:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/photoprism-maintenance
