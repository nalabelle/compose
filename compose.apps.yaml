name: apps

include:
  - path: ./common/compose.postgres.yaml

services:
  grist:
    image: registry-1.docker.io/gristlabs/grist:1.5.2@sha256:f326d59774db6caf1ad09c34c9fc8d2f67741f0dd237ff9ae3470f875ffd452e
    container_name: grist
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/grist:/persist
    environment:
      - APP_HOME_URL=https://grist.${DOMAIN:?}
      - GRIST_SINGLE_ORG=${ORG:?}
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    entrypoint:
      - node
      - ./sandbox/supervisor.mjs
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.05"
          memory: 64M
        limits:
          memory: 512M
    expose:
      - "8484"
    init: true

  # used to be libreddit, swapped to redlib
  libreddit:
    image: quay.io/redlib/redlib:latest@sha256:8c6c56472380188edc8dcd15b1a8e6741281635446b95c6ef1222f9940a96d93
    container_name: libreddit
    environment:
      - REDLIB_DEFAULT_THEME=black
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "--tries=1",
          "http://localhost:8080/settings"
        ]
      interval: 1m
      timeout: 3s
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - "8080"
    init: true

  miniflux:
    image: miniflux/miniflux:latest@sha256:3a11ac10969ec406d90eb9f2cec04e7d3b89bd9bc728bab6f036f604c4396f1c
    container_name: miniflux
    depends_on:
      postgres:
        condition: service_healthy
    secrets:
      - miniflux-database_url
    environment:
      - BASE_URL=https://miniflux.${DOMAIN:?}
      - DATABASE_URL_FILE=/run/secrets/miniflux-database_url
      - METRICS_ALLOWED_NETWORKS=127.0.0.1/8,172.0.0.1/8
      - METRICS_COLLECTOR=1
      - POLLING_FREQUENCY=180 #Minutes
      - POLLING_PARSING_ERROR_LIMIT=99
      - RUN_MIGRATIONS=1
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    healthcheck:
      test:
        - "CMD"
        - "/usr/bin/miniflux"
        - "-healthcheck"
        - "auto"
    labels:
      - metrics-job=miniflux
      - scrape-port=8080
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.03"
          memory: 24M
        limits:
          memory: 128M
    expose:
      - "8080"
    init: true

  miniflux-sidekick:
    image: ghcr.io/nalabelle/miniflux-sidekick:0.1.1745437612@sha256:b508b34e58bd185556a2bc4398de1d9967321e9f4468a3ffd8f43e8565cfeab5
    container_name: miniflux-sidekick
    depends_on:
      miniflux:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/miniflux-sidekick:/config
    env_file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/miniflux-sidekick/env
    networks:
      - default
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 128M
    init: true

  redis:
    image: redis:alpine@sha256:f773b35a95e170d92dd4214a3ec4859b1b7960bf56896ae687646d695f311187
    container_name: redis
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test:
        - "CMD"
        - "redis-cli"
        - "ping"
      interval: 20s
      timeout: 3s
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - "6379"
    init: true

  wallabag:
    image: wallabag/wallabag@sha256:9989e05769885aef0b316508b728580460c7713e435cc0b02c16e7b06e17bb6a
    container_name: wallabag
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/wallabag/data:/var/www/wallabag/data
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/wallabag/images:/var/www/wallabag/web/assets/images
    configs:
      - source: wallabag_99-custom
        target: /etc/php81/conf.d/99-custom.ini
        mode: 444
    env_file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/wallabag/env
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/api/info"
        ]
      interval: 1m
      timeout: 3s
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - "80"
    init: true

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:?}
    enable_ipv6: true
  proxy-apps:
    name: proxy-apps

secrets:
  miniflux-database_url:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/miniflux/database_url

configs:
  wallabag_99-custom:
    content: |
      memory_limit=800M
