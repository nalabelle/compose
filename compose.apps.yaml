name: apps

include:
  - path: ./common/compose.postgres.yaml

services:
  grist:
    image: registry-1.docker.io/gristlabs/grist:1.3.2@sha256:aada28865ef0a79f79fa7d32864e25c5df85aebfec847a281a9c40c3f37c9838
    container_name: grist
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/grist:/persist
    environment:
      - APP_HOME_URL=https://grist.${DOMAIN:?}
      - GRIST_SINGLE_ORG=${ORG:?}
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    entrypoint:
      - node
      - ./sandbox/supervisor.mjs
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.05"
          memory: 64M
        limits:
          memory: 512M
    expose:
      - '8484'
    init: true

  # used to be libreddit, swapped to redlib
  libreddit:
    image: quay.io/redlib/redlib:latest@sha256:d04e722091fe17424425499882a548507a70654f37aaf8cbc71081ef29b7b341
    container_name: libreddit
    environment:
      - REDLIB_DEFAULT_THEME=black
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "--tries=1",
          "http://localhost:8080/settings"
        ]
      interval: 1m
      timeout: 3s
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - '8080'
    init: true

  miniflux:
    image: miniflux/miniflux:latest@sha256:e21953092096579daaad39ba69729f01b08380b03bae4544a943f549c8e11a67
    container_name: miniflux
    depends_on:
      postgres:
        condition: service_healthy
    secrets:
      - miniflux-database_url
    environment:
      - BASE_URL=https://miniflux.${DOMAIN:?}
      - DATABASE_URL_FILE=/run/secrets/miniflux-database_url
      - METRICS_ALLOWED_NETWORKS=127.0.0.1/8,172.0.0.1/8
      - METRICS_COLLECTOR=1
      - POLLING_FREQUENCY=180 #Minutes
      - POLLING_PARSING_ERROR_LIMIT=99
      - RUN_MIGRATIONS=1
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "/usr/bin/miniflux", "-healthcheck", "auto" ]
    labels:
      - metrics-job=miniflux
      - scrape-port=8080
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.03"
          memory: 24M
        limits:
          memory: 128M
    expose:
      - '8080'
    init: true

  miniflux-sidekick:
    image: ghcr.io/nalabelle/miniflux-sidekick:0.1.1733262084@sha256:ea9ba4694ed0b538f436e1922453313364afd9c816fbaaf5ea2790c43cffb1d7
    container_name: miniflux-sidekick
    depends_on:
      miniflux:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/miniflux-sidekick:/config
    env_file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/miniflux-sidekick/env
    networks:
      - default
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 128M
    init: true

  redis:
    image: redis:alpine@sha256:c1e88455c85225310bbea54816e9c3f4b5295815e6dbf80c34d40afc6df28275
    container_name: redis
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 20s
      timeout: 3s
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - '6379'
    init: true

  wallabag:
    image: wallabag/wallabag@sha256:8854765d299d8e93f962d4be02ceb5703ed2ee24ec6c884f870bb7a18de41378
    container_name: wallabag
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/wallabag/data:/var/www/wallabag/data
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/wallabag/images:/var/www/wallabag/web/assets/images
    configs:
      - source: wallabag_99-custom
        target: /etc/php81/conf.d/99-custom.ini
        mode: 444
    env_file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/wallabag/env
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/api/info"
        ]
      interval: 1m
      timeout: 3s
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 20M
        limits:
          memory: 256M
    expose:
      - '80'
    init: true

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:?}
  proxy-apps:
    name: proxy-apps

secrets:
  miniflux-database_url:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/miniflux/database_url

configs:
  wallabag_99-custom:
    content: |
      memory_limit=200M
