name: system

services:
  alertmanager:
    image: registry-1.docker.io/prom/alertmanager:v0.27.0@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8da41e5eacf5
    container_name: alertmanager
    secrets:
      - source: alertmanager
        target: /config/alertmanager.yaml
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - --web.external-url=https://${HOSTNAME:?}-alertmanager.${DOMAIN:?}
      - --config.file=/config/alertmanager.yaml
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.alertmanager.rule=Host(`${HOSTNAME:?}-alertmanager.${DOMAIN:?}`)
      - traefik.http.services.alertmanager.loadbalancer.server.port=9093
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M
    expose:
      - '9093'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.51.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - caddy={{index .Names 0}}.${DOMAIN:?}
      - caddy.reverse_proxy={{ upstreams 8080 }}
      - traefik.enable=true
      - traefik.http.routers.cadvisor.rule=Host(`${HOSTNAME:?}-cadvisor.${DOMAIN:?}`)
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
      - metrics-job=cadvisor
      - scrape-port=8080
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M
    expose:
      - '8080'

  kopia:
    image: kopia/kopia:latest@sha256:b6cb1f09a5fa832a320ee06d7803e82cdd7f69ac6f61d76a0d55fbbf1495c043
    container_name: kopia
    volumes:
      - ${VOLUMES:?}:/volumes:ro
      # Don't put kopia in with the volumes or it'll loop itself
      - ${CACHE:?}/kopia/cache:/app/cache
      - ${CACHE:?}/kopia/logs:/app/logs
    configs:
      - source: kopia-backup
        target: /usr/local/bin/kopia-backup
    secrets:
      - kopia-password
      - kopia-server-url
    environment:
      KOPIA_LOG_DIR: /app/logs
      KOPIA_CACHE_DIRECTORY: /app/cache
      KOPIA_HOSTNAME: ${HOSTNAME:?}
    networks:
      - default
    command:
      - infinity
    entrypoint: sleep
    restart: unless-stopped
    labels:
      - chadburn.enabled=true
      - chadburn.job-exec.kopia-backup.schedule=@every 6h
      - chadburn.job-exec.kopia-backup.command=/usr/local/bin/kopia-backup
    user: "0:0"
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 24M
        limits:
          memory: 128M
    init: true

  metrics:
    image: registry-1.docker.io/victoriametrics/victoria-metrics:v1.107.0@sha256:5447c2dca686a48b6a7d70eca1cb337af4c5ed7a6916236abec3b215f4654584
    container_name: metrics
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}-${HOSTNAME:?}/victoria-metrics:/storage
      - ${DOCKER_SOCKET:?}:/var/run/docker.sock:ro
    configs:
      - source: scrape-configs
        target: /config/prometheus.yaml
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
      # For reaching scrape targets
      - proxy-apps
      - proxy-files
      - proxy-home-automation
      - proxy-media
    command:
      - -retentionPeriod=${METRICS_RETENTION:-30d}
      - -promscrape.config=/config/prometheus.yaml
      - -storageDataPath=/storage
      - -vmalert.proxyURL=http://vmalert:8880
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.metrics.rule=Host(`${HOSTNAME:?}-metrics.${DOMAIN:?}`)
      - traefik.http.services.metrics.loadbalancer.server.port=8428
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M
    expose:
      - '8428'

  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.8.2
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - "--path.rootfs=/host"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/l\
        ib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)(\
        $$|/)"
    restart: unless-stopped
    labels:
      - metrics-job=node
      - scrape-port=9100
    expose:
      - '9100'

  scheduler:
    image: premoweb/chadburn:1.0.7@sha256:096be3c00f39db7d7d33763432456ab8bdc79f0f5da7ec20fec5ff071f3e841f
    container_name: scheduler
    volumes:
      - ${DOCKER_SOCKET:?}:/var/run/docker.sock
    networks:
      - default
    command:
      - daemon
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 20M
        limits:
          memory: 50M
    init: true

  traefik:
    image: "traefik:v3.2@sha256:d12741b971f5c833919db2b680191dc23d5d96ef17e41a914e3\
      c593a8c663ac4"
    container_name: traefik
    volumes:
      - ${DOCKER_SOCKET:?}:/var/run/docker.sock:ro
      # Holds the ssl cert, which can be regenerated
      - ${CACHE:?}/traefik:/data
    secrets:
      - traefik-cf_dns_api_token
      - traefik-cf_zone_api_token
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik-cf_dns_api_token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik-cf_zone_api_token
    ports:
      - '4430:443'
      - '8000:80'
      # Uncomment this to access traefik dashboard directly
      # - "8080:8080"
    networks:
      - proxy-${COMPOSE_PROJECT_NAME:?}
      - proxy-apps
      - proxy-files
      - proxy-home-automation
      - proxy-media
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --api.dashboard=true
      - --api.insecure=true
      - --api.disabledashboardad=true
      - --certificatesresolvers.letsencrypt=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL?}
      - --certificatesresolvers.letsencrypt.acme.storage=/data/letsencrypt-acme.json
      - --entrypoints.web=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN:?}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN:?}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultrule=Host(`{{ normalize
        .ContainerName}}.${DOMAIN:?}`)
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`${HOSTNAME:?}.${DOMAIN:?}`)
      traefik.http.routers.traefik.service: traefik
      traefik.http.services.traefik.loadbalancer.server.port: "8080"
      traefik.tls.stores.default.defaultgeneratedcert.resolver: "letsencrypt"
      traefik.tls.stores.default.defaultgeneratedcert.domain.main: "${DOMAIN:?}"
      traefik.tls.stores.default.defaultgeneratedcert.domain.sans: "*.${DOMAIN:?}"
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 20M
        limits:
          memory: 50M
    init: true

  vmalert:
    image: registry-1.docker.io/victoriametrics/vmalert:v1.107.0@sha256:38c8f6e30593f3372eb6ec110732c892f71f90f36ead57854b060f7bd58fda30
    container_name: vmalert
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}-${HOSTNAME:?}/victoria-metrics/_alerts:/etc/alerts
    configs:
      - source: alerts
        target: /alerts/docker.yaml
    networks:
      - default
    command:
      - -datasource.url=http://metrics:8428
      - -remoteRead.url=http://metrics:8428
      - -remoteWrite.url=http://metrics:8428
      - -notifier.url=http://alertmanager:9093
      - -external.url=https://${HOSTNAME:?}-metrics.${DOMAIN:?}
      - -rule=/alerts/docker.yaml
      - -rule=/etc/alerts/*.yaml
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M
    expose:
      - '8880'

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:?}
  # Add all networks here so we can reach out to them
  proxy-apps:
    name: proxy-apps
  proxy-files:
    name: proxy-files
  proxy-media:
    name: proxy-media
  proxy-home-automation:
    name: proxy-home-automation
  # Let's be consistent
  proxy-system:
    name: proxy-system

secrets:
  alertmanager:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/alertmanager-config.yaml
  caddyfile:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/caddyfile
  traefik-cf_dns_api_token:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/cf_dns_api_token
  traefik-cf_zone_api_token:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/cf_zone_api_token
  kopia-password:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/kopia-password
  kopia-server-url:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/kopia-server-url

configs:
  get-host-ip:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/get-host-ip
  kopia-backup:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/kopia-backup
  scrape-configs:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/metrics-scrape-configs.yaml
  alerts:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/alerts.yaml
