name: system

services:
  traefik:
    image: "traefik:v3.2@sha256:78bd806c592d9b6c8c6c4ccc0be8ed5bf3eeffec5fc1610329b2c916219023f2"
    container_name: traefik
    restart: unless-stopped
    init: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`${HOSTNAME:?}.${DOMAIN:?}`)
      traefik.http.routers.traefik.service: traefik
      traefik.http.services.traefik.loadbalancer.server.port: "8080"
      traefik.tls.stores.default.defaultgeneratedcert.resolver: "letsencrypt"
      traefik.tls.stores.default.defaultgeneratedcert.domain.main: "${DOMAIN:?}"
      traefik.tls.stores.default.defaultgeneratedcert.domain.sans: "*.${DOMAIN:?}"
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --api.dashboard=true
      - --api.insecure=true
      - --api.disabledashboardad=true
      - --certificatesresolvers.letsencrypt=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL?}
      - --certificatesresolvers.letsencrypt.acme.storage=/data/letsencrypt-acme.json
      - --entrypoints.web=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN:?}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN:?}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultrule=Host(`{{ normalize .ContainerName}}.${DOMAIN:?}`)
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik-cf_dns_api_token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik-cf_zone_api_token
    ports:
      - "8000:80"
      - "4430:443"
      # Uncomment this to access traefik dashboard directly
      # - "8080:8080"
    secrets:
      - traefik-cf_dns_api_token
      - traefik-cf_zone_api_token
    volumes:
      - "${DOCKER_SOCKET:?}:/var/run/docker.sock:ro"
      # Holds the ssl cert, which can be regenerated
      - "${CACHE:?}/traefik:/data"
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 20M
        limits:
          memory: 50M

  scheduler:
    image: premoweb/chadburn:1.0.7@sha256:096be3c00f39db7d7d33763432456ab8bdc79f0f5da7ec20fec5ff071f3e841f
    container_name: scheduler
    restart: unless-stopped
    init: true
    command:
      - daemon
    volumes:
      - ${DOCKER_SOCKET:?}:/var/run/docker.sock
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 20M
        limits:
          memory: 50M

  kopia:
    image: kopia/kopia:latest@sha256:51784ce0961940846f4f47cab2d4f58e2e0cb467de357f9a80279b149a00c06e
    container_name: kopia
    restart: unless-stopped
    init: true
    user: "0:0"
    labels:
      - chadburn.enabled=true
      - chadburn.job-exec.kopia-backup.schedule=@every 6h
      - chadburn.job-exec.kopia-backup.command=/usr/local/bin/kopia-backup
    environment:
      KOPIA_LOG_DIR: /app/logs
      KOPIA_CACHE_DIRECTORY: /app/cache
      KOPIA_HOSTNAME: ${HOSTNAME:?}
    entrypoint: sleep
    command:
      - infinity
    volumes:
      - ${VOLUMES:?}:/volumes:ro
      # Don't put kopia in with the volumes or it'll loop itself
      - ${CACHE:?}/kopia/cache:/app/cache
      - ${CACHE:?}/kopia/logs:/app/logs
    configs:
      - source: kopia-backup
        target: /usr/local/bin/kopia-backup
    secrets:
      - kopia-password
      - kopia-server-url
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 24M
        limits:
          memory: 128M

  metrics:
    image: registry-1.docker.io/victoriametrics/victoria-metrics:v1.106.0@sha256:33d24c1955fe4dac91efa0b0190dd72b8999d3dc086216f85b8d9ae74d72a6d9
    container_name: metrics
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.metrics.rule=Host(`${HOSTNAME:?}-metrics.${DOMAIN:?}`)
      - traefik.http.services.metrics.loadbalancer.server.port=8428
    command:
      - -retentionPeriod=${METRICS_RETENTION:-30d}
      - -promscrape.config=/config/prometheus.yaml
      - -storageDataPath=/storage
      - -vmalert.proxyURL=http://vmalert:8880
    expose:
      - 8428
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}-${HOSTNAME:?}/victoria-metrics:/storage
      - ${DOCKER_SOCKET:?}:/var/run/docker.sock:ro
    configs:
      - source: scrape-configs
        target: /config/prometheus.yaml
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M

  vmalert:
    image: registry-1.docker.io/victoriametrics/vmalert:v1.106.0@sha256:0d5ceaf80533457d51d15ed56d13e43e3cc188d0207fd67c921eaf44c5d72781
    container_name: vmalert
    restart: unless-stopped
    command:
      - -datasource.url=http://metrics:8428
      - -remoteRead.url=http://metrics:8428
      - -remoteWrite.url=http://metrics:8428
      - -notifier.url=http://alertmanager:9093
      - -external.url=https://${HOSTNAME:?}-metrics.${DOMAIN:?}
      - -rule=/alerts/docker.yaml
      # - -rule=/etc/alerts/*.yaml
    expose:
      - 8880
    configs:
      - source: alerts
        target: /alerts/docker.yaml
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M

  alertmanager:
    image: registry-1.docker.io/prom/alertmanager:v0.27.0@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8da41e5eacf5
    container_name: alertmanager
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.alertmanager.rule=Host(`${HOSTNAME:?}-alertmanager.${DOMAIN:?}`)
      - traefik.http.services.alertmanager.loadbalancer.server.port=9093
    command:
      - --config.file=/config/alertmanager.yaml
    expose:
      - 9093
    secrets:
      - source: alertmanager
        target: /config/alertmanager.yaml
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M

  push-monitor:
    image: alpine/curl@sha256:5adbdde67c2fee2863259fe3eafd44f7a501cbf70ac603936a6241784c9c6188
    container_name: push-monitor
    restart: unless-stopped
    init: true
    entrypoint:
      - push-monitor
    secrets:
      - push-monitor-url
    environment:
      - PUSH_URL_FILE=/run/secrets/push-monitor-url
    configs:
      - source: push-monitor
        target: /usr/local/bin/push-monitor
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 16M
        limits:
          memory: 24M

configs:
  kopia-backup:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/kopia-backup
  scrape-configs:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/metrics-scrape-configs.yaml
  push-monitor:
    file: ${CONFIGS:?}/${COMPOSE_PROJECT_NAME:?}/push-monitor
  alerts:
    content: |
      groups:
        - name: Hosts
          rules:
            - alert: InstanceDown
              expr: up == 0
              for: 5m
              annotations:
                summary: "Instance {{ $$labels.instance }} down"
                description: "{{ $$labels.instance }} of job {{ $$labels.job }} has been down for more than 5 minutes."

secrets:
  alertmanager:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/alertmanager-config.yaml
  traefik-cf_dns_api_token:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/cf_dns_api_token
  traefik-cf_zone_api_token:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/cf_zone_api_token
  kopia-password:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/kopia-password
  kopia-server-url:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/kopia-server-url
  push-monitor-url:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/push-monitor-url

networks:
  default:
    name: global
