name: media

include:
  - path: common/compose.postgres.yaml

services:
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:2.17.7@sha256:7ccc11318c1ad93c4325061b6c42ed6038fcd97eda4619e520373606b7f5814c
    container_name: audiobookshelf
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/audiobookshelf/config:/config
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/audiobookshelf/metadata:/metadata
      - nfs-podcasts:/podcasts
    environment:
      - PORT=13378
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.audiobookshelf.loadbalancer.server.port=13378
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 1.5G
    expose:
      - "13378"
    init: true

  bazarr:
    image: ghcr.io/linuxserver/bazarr:1.5.1@sha256:ac9fe56bee9133bcb9e27fe48faaf83c57b83d75bacc277d9b2619136632b1fe
    container_name: bazarr
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/bazarr:/config
      - nfs-downloads:/downloads
      - nfs-movies:/media/movies
      - nfs-television:/media/television
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - --no-update=true
      - --config=/config
    entrypoint:
      - python3
      - /app/bazarr/bin/bazarr.py
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 512M
    expose:
      - "6767"
    init: true

  bazarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    container_name: bazarr-exporter
    secrets:
      - bazarr-api-key
    environment:
      - PORT=9707
      - URL=http://bazarr:6767
      - API_KEY_FILE=/run/secrets/bazarr-api-key
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - bazarr
    restart: unless-stopped
    labels:
      - metrics-job=bazarr
      - scrape-port=9707
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    expose:
      - "9707"
    init: false

  lidarr:
    image: ghcr.io/linuxserver/lidarr:2.8.2@sha256:0380358d42b0faa91aa37013e7d0c6064e1713a07ec03d6ab3f8e8b9e8f60fb7
    container_name: lidarr
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/lidarr:/config
      - nfs-music:/media/music
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - -nobrowser
      - -data=/config
    entrypoint:
      - /app/lidarr/bin/Lidarr
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: .25G
        limits:
          memory: 2G
    expose:
      - "8686"
    init: true

  lidarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    container_name: lidarr-exporter
    depends_on:
      - lidarr
    secrets:
      - lidarr-api-key
    environment:
      - PORT=9707
      - URL=http://lidarr:8686
      - API_KEY_FILE=/run/secrets/lidarr-api-key
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - lidarr
    restart: unless-stopped
    labels:
      - metrics-job=lidarr
      - scrape-port=9707
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    expose:
      - "9707"
    init: false

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:1.28.2@sha256:d9dc54c33e7d91518309648e9bdf87896162af27c6f16da42b7bb459c0ece3ae
    container_name: prowlarr
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/prowlarr:/config
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - -nobrowser
      - -data=/config
    entrypoint:
      - /app/prowlarr/bin/Prowlarr
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 256M
        limits:
          memory: 512M
    expose:
      - "9696"
    init: true

  prowlarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    container_name: prowlarr-exporter
    depends_on:
      - prowlarr
    secrets:
      - prowlarr-api-key
    environment:
      - PORT=9707
      - URL=http://prowlarr:9696
      - API_KEY_FILE=/run/secrets/prowlarr-api-key
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - prowlarr
    restart: unless-stopped
    labels:
      - metrics-job=prowlarr
      - scrape-port=9707
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    expose:
      - "9709"
    init: false

  radarr:
    image: ghcr.io/linuxserver/radarr:5.16.3@sha256:eb894bd26fd3fb29981bf91b140834417ce2ed28ab8217d0ce121db5c460f39a
    container_name: radarr
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/radarr:/config
      - nfs-downloads:/downloads
      - nfs-movies:/media/movies
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - -nobrowser
      - -data=/config
    entrypoint:
      - /app/radarr/bin/Radarr
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 256M
        limits:
          memory: 2G
    expose:
      - "7878"
    init: true

  radarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    container_name: radarr-exporter
    depends_on:
      - radarr
    secrets:
      - radarr-api-key
    environment:
      - PORT=9707
      - URL=http://radarr:7878
      - API_KEY_FILE=/run/secrets/radarr-api-key
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - radarr
    restart: unless-stopped
    labels:
      - metrics-job=radarr
      - scrape-port=9707
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    expose:
      - "9707"
    init: false

  sabnzbd:
    image: ghcr.io/linuxserver/sabnzbd:4.4.1@sha256:76a15e85e391eb2702ac1c6ccd90fc7b7546913065c1504f708ce9bf863aedbf
    container_name: sabnzbd
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/sabnzbd:/config
      - nfs-downloads:/downloads
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - --config-file
      - /config/sabnzbd.ini
      - -l1
    entrypoint:
      - python3
      - /app/sabnzbd/SABnzbd.py
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 128M
        limits:
          memory: 1G
    expose:
      - "8080"
    init: true

  sabnzbd-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    container_name: sabnzbd-exporter
    depends_on:
      - sabnzbd
    secrets:
      - sabnzbd-api-key
    environment:
      - PORT=9707
      - URL=http://sabnzbd:8080
      - API_KEY_FILE=/run/secrets/sabnzbd-api-key
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - sabnzbd
    restart: unless-stopped
    labels:
      - metrics-job=sabnzbd
      - scrape-port=9707
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    expose:
      - "9707"
    init: false

  sonarr:
    image: ghcr.io/linuxserver/sonarr:4.0.11@sha256:ca4ad72f07e532d1d414435eb43193d1dc407255e46c21c2694653ca8af4fd81
    container_name: sonarr
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/sonarr:/config
      - nfs-downloads:/downloads
      - nfs-television:/media/television
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - -nobrowser
      - -data=/config
    entrypoint:
      - /app/sonarr/bin/Sonarr
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 256M
        limits:
          memory: 2G
    expose:
      - "8989"
    init: true

  sonarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    container_name: sonarr-exporter
    depends_on:
      - sonarr
    secrets:
      - sonarr-api-key
    environment:
      - PORT=9707
      - URL=http://sonarr:8989
      - API_KEY_FILE=/run/secrets/sonarr-api-key
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - sonarr
    restart: unless-stopped
    labels:
      - metrics-job=sonarr
      - scrape-port=9707
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    expose:
      - "9707"
    init: false

  yt-dlp:
    image: ghcr.io/jauderho/yt-dlp:latest@sha256:9e7fb4c1c49552591a4842323f1d464b546de4d0cb1d2683ae1ce09d6990f235
    container_name: yt-dlp
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/ytdlp:/config
      - nfs-downloads:/downloads
      - nfs-internet:/internet
    networks:
      - default
    entrypoint:
      - sleep
      - infinity
    restart: unless-stopped
    labels:
      - chadburn.enabled=true
      - chadburn.job-exec.yt-dlp.schedule=@every 12h
      - chadburn.job-exec.yt-dlp.command=/config/scheduled-task
    deploy:
      resources:
        reservations:
          cpus: "0.02"
          memory: 500M
        limits:
          memory: 1G
    init: true

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:?}
  proxy-media:
    name: proxy-media

volumes:
  nfs-downloads:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/downloads"
  nfs-internet:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/internet"
  nfs-movies:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/movies"
  nfs-music:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/music"
  nfs-television:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/television"
  nfs-podcasts:
    driver_opts:
      type: nfs
      o: "addr=${FILEHOST:?},nfsvers=4,rw,soft,noatime,nodiratime"
      device: ":/podcasts"

secrets:
  bazarr-api-key:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/bazarr-api-key
  lidarr-api-key:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/lidarr-api-key
  prowlarr-api-key:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/prowlarr-api-key
  radarr-api-key:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/radarr-api-key
  sabnzbd-api-key:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/sabnzbd-api-key
  sonarr-api-key:
    file: ${SECRETS:?}/${COMPOSE_PROJECT_NAME:?}/sonarr-api-key
