name: home-automation

include:
  - path: common/compose.postgres.yaml # home-assistant database

services:
  go2rtc:
    image: alexxit/go2rtc@sha256:41fc2431fc3c867364ab7c8d935d2bddd9736597694afd3a983fe14c175347e8
    container_name: go2rtc
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/go2rtc:/config
    ports:
      # rtsp
      - '8554:8554'
      # webrtc
      - '8555:8555'
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.go2rtc.loadbalancer.server.port=1984
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M
    expose:
      - '1984'
    init: false

  home-assistant:
    image: ghcr.io/home-assistant/home-assistant:2024.12@sha256:db0f344d5126bfedd7bf18e0bfb8249a9a5e6785e2f6cb3728edbd393fff1981
    container_name: home-assistant
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/home-assistant:/config
    environment:
      - MPLCONFIGDIR=/tmp/matplotlib
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    command:
      - --config
      - /config
    entrypoint:
      - exec
      - python3
      - -m
      - homeassistant
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.home-assistant.loadbalancer.server.port=8123
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
      - metrics-job=home-assistant
      - scrape-port=8123
      - scrape-path=/api/prometheus
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 256M
        limits:
          memory: 1G
    expose:
      - '8123'
    init: true

  mosquitto:
    image: registry-1.docker.io/library/eclipse-mosquitto:2.0.20@sha256:8b396cec28cd5e8e1a3aba1d9abdbddd42c454c80f703e77c1bec56e152fa54e
    container_name: mosquitto
    ports:
      - '1883:1883'
    networks:
      - default
    command:
      - -c
      - /mosquitto-no-auth.conf
    entrypoint:
      - mosquitto
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 16M
        limits:
          memory: 64M
    init: true

  tasmoadmin:
    image: ghcr.io/tasmoadmin/tasmoadmin:v4.2.1@sha256:f3e64d6e180ff39a2e1c6ca4e16976fd71d0558c972e8e549d01245ce6e2aa66
    container_name: tasmoadmin
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/tasmoadmin:/data
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 64M
    expose:
      - '80'
    init: false

  zigbee2mqtt:
    image: ghcr.io/koenkk/zigbee2mqtt:1.42.0@sha256:732ae43d714610040bd049487b60af3b2dbcfdefb5f169897455b60d715e2131
    container_name: zigbee2mqtt
    depends_on:
      - mosquitto
    volumes:
      - ${VOLUMES:?}/${COMPOSE_PROJECT_NAME:?}/zigbee2mqtt:/app/data
    networks:
      - default
      - proxy-${COMPOSE_PROJECT_NAME:?}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.zigbee2mqtt.loadbalancer.server.port=8080
      - traefik.docker.network=proxy-${COMPOSE_PROJECT_NAME:?}
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 128M
    devices:
      - ${ZIGBEE_DEVICE:?}:/dev/zigbee
    expose:
      - '8080'
    init: true

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:?}
  proxy-home-automation:
    name: proxy-home-automation
