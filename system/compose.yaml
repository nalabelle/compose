name: system

services:
  alloy:
    image: registry-1.docker.io/grafana/alloy:v1.9.2@sha256:5039cc7a3cbde07120e757decc40f8f55f82c9bd0db45892a8b0e0c9a3371f4b
    container_name: ${HOSTNAME:?}-alloy #dclint disable-line service-container-name-regex
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: alloy-config
        target: /etc/alloy/alloy.config
    secrets:
      - source: alloy-api-key
        target: /etc/alloy/api-key
    environment:
      - ALLOY_REMOTE_WRITE_URL
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --stability.level=experimental
      - /etc/alloy/alloy.config
    restart: unless-stopped
    labels:
      - traefik.enable=true
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 32M
        limits:
          memory: 256M
    expose:
      - "12345"
    hostname: ${HOSTNAME:?}-alloy
    privileged: true
  auto_docker_proxy:
    image: ghcr.io/obeone/traefik_network_connector@sha256:dd55937fb3c36b4b7e971e5148728611609b5c675432692250742fe9e515232d
    container_name: auto-docker-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: auto-docker-proxy-config
        target: /usr/src/app/config.yaml
    restart: unless-stopped

  deck-chores:
    image: funkyfuture/deck-chores:src-commit-d0b2ff6@sha256:bbfda17531a517c132c5f748f89e309d2d83b2d75dad303916a1b1ecfc8eba6d
    container_name: deck-chores
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TIMEZONE=America/Los_Angeles
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 10M
        limits:
          memory: 64M
    init: true

  dozzle:
    image: amir20/dozzle:v8@sha256:36707d180462e764eac81aac793f8352296048404fa4dea1f280fa3cefa7fce3
    container_name: ${HOSTNAME:?}-dozzle #dclint disable-line service-container-name-regex
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DOZZLE_NO_ANALYTICS: "true"
    ports:
      - "0.0.0.0:7007:7007"
    command:
      - agent
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 16M
        limits:
          memory: 64M
    init: true

  kopia:
    image: kopia/kopia:latest@sha256:0c55a361a353f69a121572920e7af3eb54b014f99df1f2fd8a595adcc33c2904
    container_name: kopia
    volumes:
      - ${VOLUMES:?}:/volumes:ro
      - kopia-cache:/app/cache
    configs:
      - source: kopia-backup
        target: /usr/local/bin/kopia-backup
    environment:
      KOPIA_LOG_DIR: /app/logs
      KOPIA_CACHE_DIRECTORY: /app/cache
      KOPIA_SERVER_ADDRESS:
      KOPIA_PASSWORD:
    command:
      - infinity
    entrypoint: sleep
    restart: unless-stopped
    labels:
      - deck-chores.backup.command=/usr/local/bin/kopia-backup
      - deck-chores.backup.cron=*/6 0 0
      - deck-chores.backup.jitter=60m
    user: "0:0"
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 24M
        limits:
          memory: 512M
    init: true

  oom:
    image: registry-1.docker.io/library/docker:cli@sha256:be316e9f9a158bdd04d175cac7867be4561d9718c8f45331ba09f839854d6ac4
    container_name: oom
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - events
      - --filter
      - type=container
      - --filter
      - event=oom
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 7M
        limits:
          memory: 30M
    init: true

  traefik:
    image: "traefik:v3.2@sha256:d12741b971f5c833919db2b680191dc23d5d96ef17e41a914e3\
      c593a8c663ac4"
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Holds the ssl cert, which can be regenerated
      - traefik-data:/data
    secrets:
      - traefik-cf_dns_api_token
      - traefik-cf_zone_api_token
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik-cf_dns_api_token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik-cf_zone_api_token
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      #- "8080:8080"
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --api.dashboard=true
      - --api.insecure=true
      - --api.disabledashboardad=true
      - --certificatesresolvers.letsencrypt=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.email=letsencrypt@${DOMAIN:?}
      - --certificatesresolvers.letsencrypt.acme.storage=/data/letsencrypt-acme.json
      - --entrypoints.web=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN:?}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN:?}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultrule=Host(`{{ normalize .ContainerName
        }}.${DOMAIN:?}`)
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`${HOSTNAME:?}.${DOMAIN:?}`)
      traefik.http.routers.traefik.service: traefik
      traefik.http.services.traefik.loadbalancer.server.port: "8080"
      traefik.tls.stores.default.defaultgeneratedcert.resolver: "letsencrypt"
      traefik.tls.stores.default.defaultgeneratedcert.domain.main: "${DOMAIN:?}"
      traefik.tls.stores.default.defaultgeneratedcert.domain.sans: "*.${DOMAIN:?}"
    deploy:
      resources:
        reservations:
          cpus: "0.01"
          memory: 64M
        limits:
          memory: 96M
    init: true

volumes:
  traefik-data: {}
  kopia-cache: {}

secrets:
  traefik-cf_dns_api_token:
    environment: CF_DNS_API_TOKEN
  traefik-cf_zone_api_token:
    environment: CF_ZONE_API_TOKEN
  alloy-api-key:
    environment: ALLOY_API_KEY

configs:
  auto-docker-proxy-config:
    file: ./proxy/config.yaml
  alloy-config:
    file: ./alloy/alloy.config
  kopia-backup:
    file: ./kopia/kopia-backup
