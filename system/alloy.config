logging {
  level = "warn"
}

discovery.docker "container_discovery" {
  host = "unix:///var/run/docker.sock"
  refresh_interval = "5s"
}

discovery.relabel "docker_logs" {
  targets = []

  rule {
    target_label = "job"
    replacement  = "integrations/docker"
  }

  rule {
    target_label = "instance"
    replacement  = constants.hostname
  }

  rule {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/(.*)"
    target_label  = "container"
  }

  rule {
    source_labels = ["__meta_docker_container_log_stream"]
    target_label  = "stream"
  }
}

loki.source.docker "docker_logs" {
  host             = "unix:///var/run/docker.sock"
  targets          = discovery.docker.container_discovery.targets
  forward_to       = [loki.write.grafana_cloud_loki.receiver]
  relabel_rules    = discovery.relabel.docker_logs.rules
  refresh_interval = "5s"
}

loki.write "grafana_cloud_loki" {
  endpoint {
    url = "https://logs-prod-021.grafana.net/loki/api/v1/push"
    basic_auth {
        username = "1069561"
        password_file = "/etc/alloy/api-key"
    }
  }
}

prometheus.exporter.unix "node_exporter" {}

prometheus.exporter.cadvisor "cadvisor" {
  store_container_labels = true
  docker_only = true
  enabled_metrics = ["cpu", "memory", "network"]
}

prometheus.scrape "exporter" {
  targets = array.concat(
    prometheus.exporter.unix.node_exporter.targets,
    prometheus.exporter.cadvisor.cadvisor.targets,
  )

  forward_to = [prometheus.remote_write.metrics.receiver]
}

prometheus.remote_write "metrics" {
  endpoint {
    url = sys.env("ALLOY_REMOTE_WRITE_URL")
  }
}
